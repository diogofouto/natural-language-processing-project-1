Group 3
Alexandre Pires nº92414
Diogo Fouto nº 93705

Options taken:

d2dd and d2dddd: Made using Epsilon-transitions to add just enough 0s for a number to be able to reach 4 digits, any less than that and it wouldn't be enough digits to reach the final stage. 

A2R: Made from an inverted FST R2A, since we wanted to invert inputs from R2A to outputs, and vice-versa.

birthA2T: Based on concatenations of FSTs: 3x copy (dd/) -> mm2mmm -> 5x copy (/aaaa) 

birthR2A: First an FST is made from composing R2A with d2dd, which allows us to get a two digit number from a roman numeral, lets call this "ddconv". This "ddconv" is concatenated with "copy" on the right, in order to extract the following "/" on a date, lets call this "ddconv2". Since we got both 2 digits for days and months, each followed by a "/", we can concatenate ddconv2 with another ddconv2 to handle everything from "dd/mm/", doing "ddmmconv". The year is extracted by composing R2A with d2dddd, to do a "aaaaconv". Finally, we concatenate ddmmconv with aaaaconv and get birthR2A.

birthT2R: TODO

birthR2L: This can be made by simply composing birthR2A with date2year, in order to get the year written in arabic numerals, the result of which is then composed with leap to produce the desired result.   

Estimated work distribution:

Alexandre Pires: 50%, Diogo Fouto: 50%

The reasoning behind this is that the entire workload was distributed fairly. Exercices 1 were divided 50%/50%, exercices 2 got divided 3 to Alexandre, and 2 to Diogo, but Diogo made more contribuitions to the tests, bing responsible for exercice 3, and shell script. Both worked on tests for exercices 1.
